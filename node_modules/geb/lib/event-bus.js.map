{"version":3,"sources":["event-bus.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA,qBAAA;IAAA;;;;EAAA,WAAA,GAAc,OAAA,CAAQ,gBAAR;;EAEd,MAAM,CAAC,OAAP,GACM;;;IACS,kBAAC,QAAD;;QAAC,WAAS;;MACrB,2CAAA,SAAA;MACA,IAAgB,QAAhB;QAAA,IAAC,CAAA,SAAD,CAAA,EAAA;;IAFW;;uBAIb,SAAA,GAAW,SAAA;MACT,IAAO,iBAAP;eACE,MAAM,CAAC,EAAP,GAAY,KADd;;IADS;;uBAIX,WAAA,GAAa,SAAC,GAAD;MACX,IAAO,WAAP;AACE,eAAO,YADT;OAAA,MAEK,IAAG,GAAA,YAAe,QAAlB;AACH,eAAO,WADJ;OAAA,MAEA,IAAG,GAAA,YAAe,MAAlB;AACH,eAAO,SADJ;OAAA,MAAA;AAEA,eAAO,SAFP;;IALM;;uBAQb,UAAA,GAAY,SAAA;AACV,UAAA;MADW;MACX,GAAA,GAAM;AACN,WAAA,sCAAA;;AACE,gBAAO,IAAC,CAAA,WAAD,CAAa,GAAb,CAAP;AAAA,eACO,UADP;YACuB,GAAG,CAAC,IAAJ,GAAW;AAA3B;AADP,eAEO,QAFP;YAEqB,GAAG,CAAC,MAAJ,GAAa;AAA3B;AAFP,eAGO,QAHP;YAGqB,GAAG,CAAC,MAAJ,GAAa;AAHlC;AADF;AAKA,aAAO;IAPG;;uBASZ,mBAAA,GAAqB,SAAC,OAAD;MAInB,OAAA,GAAU,OAAO,CAAC,OAAR,CAAgB,MAAhB,EAAwB,SAAC,KAAD,EAAO,GAAP;AAChC,eAAO,KAAK,CAAC,MAAN,CAAa,CAAb,CAAe,CAAC,WAAhB,CAAA;MADyB,CAAxB;MAGV,OAAA,GAAU,OAAO,CAAC,OAAR,CAAgB,IAAhB,EAAsB,GAAtB;AAEV,aAAO;IATY;;;;KA1BA;;EAqCvB,IAAG,gDAAH;IACM,IAAA,QAAA,CAAA,EADN;;AAxCA","file":"event-bus.js","sourceRoot":"/source/","sourcesContent":["EventObject = require './event-object'\n\nmodule.exports =\nclass EventBus extends EventObject\n  constructor: (toGlobal=true) ->\n    super\n    @_toGlobal() if toGlobal\n\n  _toGlobal: ->\n    if not global.eb?\n      global.eb = @\n\n  _isInstance: (arg) ->\n    if not arg?\n      return 'undefined'\n    else if arg instanceof Function\n      return 'function'\n    else if arg instanceof Object\n      return 'object'\n    else return 'string'\n  _defineArg: (args...) ->\n    obj = {}\n    for arg in args\n      switch @_isInstance arg\n        when 'function' then obj.func = arg\n        when 'string' then obj.domain = arg\n        when 'object' then obj.option = arg\n    return obj\n\n  _replaceToCamelCase: (channel) ->\n    #First char to upper\n    # channel = \"#{channel.charAt(0).toUpperCase()}#{channel.substring 1,channel.length}\"\n    #replace all -\\w with - uppercase w\n    channel = channel.replace /-\\w/g, (match,pos) ->\n      return match.charAt(1).toUpperCase()\n    #replace : to .\n    channel = channel.replace /:/g, '.'\n\n    return channel\n\nif window? #not node\n  new EventBus()\n"]}